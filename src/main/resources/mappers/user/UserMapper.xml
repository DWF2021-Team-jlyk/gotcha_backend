<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gotcha.www.user.dao.UserDAO">
	
	<select id="findByUsername" parameterType="String" resultType="userDto">
		SELECT user_id, user_pwd, user_enabled
		FROM gc_user
		WHERE user_id = #{user_id}
	</select>
	
	<select id="findByWsUsername" parameterType="String" resultType="userDto">
		SELECT ur.ws_id, u.user_id, u.user_pwd, u.user_enabled, r.role_type 
		FROM gc_user_role ur
		JOIN gc_user u
		ON ur.user_id = u.user_id
		JOIN gc_role r
		ON ur.role_id = r.role_id
		WHERE ur.user_id = #{user_id} and ur.ws_id = #{ws_id}
	</select>
	
	<select id="selectWorkspace" parameterType="String" resultType="HashMap">
		SELECT UR.IS_FAV, W.WS_ID, W.WS_NAME, UR.USER_ID, U.USER_NAME, R.ROLE_ID, R.ROLE_TYPE
		from GC_USER_ROLE UR
		INNER JOIN GC_USER U
		ON (U.user_id = UR.user_id)
		INNER JOIN GC_ROLE R 
		ON (R.role_id = UR.role_id) 
		INNER JOIN GC_WS W 
		ON(W.WS_ID = UR.WS_ID)
		WHERE UR.USER_ID=#{user_id}
	</select>

	<resultMap id="NotiList" type="HashMap">
		<result property="ws_id" column="ws_id" />
		<result property="user_id" column="user_id" /> 
		<result property="ws_name" column="ws_name" />
		<result property="noti_type" column="noti_/type" />
		<result property="noti_desc" column="noti_desc" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	<select id="selectNoti" parameterType="String" resultMap="NotiList">
		SELECT w.ws_id, w.ws_name, n.noti_type, n.noti_desc, n.noti_time
		FROM gc_noti n
		JOIN gc_ws w ON w.ws_id = n.ws_id
		JOIN gc_noti_user nu ON nu.noti_id = n.noti_id
		WHERE nu.user_id= #{user_id}
	</select>
	
	<select id="checkId" parameterType="String" resultType="int">
		SELECT count(user_id) 
		FROM gc_user 
		WHERE user_id = #{user_id}
	</select>

	<select id="getUserInfo" parameterType="String" resultType="com.gotcha.www.home.vo.UserVO">
		SELECT user_id, user_name
		FROM gc_user
		WHERE user_id = #{user_id}
	</select>

	<select id="checkPwd" parameterType="String" resultType="int">
		SELECT count(*)
		FROM gc_user
		WHERE user_id = #{user_id} and user_pwd = #{user_pwd}
	</select>
	
	<select id="getUserPwd" parameterType="String" resultType="com.gotcha.www.home.vo.UserVO">
		SELECT *
		FROM gc_user
		WHERE user_id = #{user_id}
	</select>
	
	<select id="checkWorkspaceAdmin" parameterType="String" resultType="int">
		SELECT count(*)
		FROM gc_user_role
		WHERE user_id = #{user_id} AND role_id = 1
	</select>
	
	<insert id="insertUser" parameterType="userVO">
		INSERT INTO gc_user 
		VALUES(#{user_id}, #{user_pwd}, 0, #{user_name}, null)
	</insert>
	
	<update id="updateEnabled" parameterType="String">
		UPDATE gc_user 
		SET user_enabled = 1 
		WHERE user_id = #{user_id}
	</update>
	
	<update id="updateLastLogin" parameterType="String">
		UPDATE gc_user
		SET user_last_login = to_char(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
		WHERE user_id = #{user_id}
	</update>
	
	<update id="updatePwd" parameterType="String">
		UPDATE gc_user
		SET user_pwd = #{user_pwd}
		WHERE user_id = #{user_id}
	</update>
	
	<update id="updateUserName" parameterType="String">
		UPDATE gc_user
		SET user_name = #{user_name}
		WHERE user_id = #{user_id}
	</update>
	
	<delete id="deleteCardReply" parameterType="String">
		DELETE FROM GC_CARD_ACT 
		WHERE user_id = #{user_id} AND ISLOG = 0 
	</delete>
	
	<delete id="deleteCardMember" parameterType="String">
		DELETE FROM GC_CARD_MEM
		WHERE user_id = #{user_id}
	</delete>
	
	<delete id="deleteNotiUser" parameterType="String">
		DELETE FROM GC_NOTI_USER
		WHERE user_id = #{user_id}
	</delete>
	
	<delete id="deleteUserRole" parameterType="String">
		DELETE FROM GC_USER_ROLE
		WHERE user_id = #{user_id}
	</delete>
	
	<delete id="deleteUser" parameterType="String">
		DELETE FROM GC_USER
		WHERE user_id = #{user_id}
	</delete>
</mapper>